 브라우저=자바스크립트해석기
 -자바스크립트 코어(ECMAscript)
 -브라우저 객체 모델(Browser Objec Model - BOM)
 window
  -document
		-문서(HTML문서)
		-문서를 통제하고 다루는 객체
		-태그 ->HTML 태그를 선택하고 조작하는 것
		-선택하고
		
	-location
		-웹브라우저의 URL의 정보 또는 통제를 위한 객체
		http -> 80포트
		https -> 443포트
		
		protocol -> 규약,규칙,의전...
			-http - 웹페이지 전송 규약
			-ftp:
			
			.assign(url 주소) -URL 주소로 페이지 이동
				.href 속성 - URL을 대입 하면 -> 페이지가 이동
				location.href="이동할 주소";
			.reload()
			.replace(url 주소) - URL 주소로 페이지가 치환(이동)
	-history
		-방문기록과 관련된 객체
        .lenght - 방문한 웹사이트 갯수
        scrollRestoration - auto/manual
            auto 페이지 이동 후 다시 뒤로 가기 했을때 현재 스크롤 위치 유지
            manual 페이지 이동 후 다시 뒤로 가기 했을때 현재 스크롤을 가장 상단으로 이동
            historl.scrollRestoration="nanual"'

            .back() - 뒤로가기(1번만) -go(-1)
            .forward() - 앞으로가기(1번만) -go(1)
            .go(숫자) - 여러 단계를 이동가능
                숫자 - 음수 ->뒤로가기
                숫자 - 양수 ->앞으로가기.
                .go-2) ->뒬 2단계 이동
                .go(2) ->앞으로 2단계이동
	-screen
		-브라우저의 문서가 출력되는 화면과 관련된 객체
		console.dir(window.screen);
		landscpe -> 가로가 긴 경우
		portrait -> 세로로 긴 경우
	-navigator
		-실행되고 있는 브라우저의 환경에 대한 정보
		console.dir(window.navigator);

    window  
        .alert("메세지") -- 알림 메세지 -확인
        .confirm("메세지") -- 진행 여부를 확인 할때 메세지 -확인,취소
                            -확인버튼 클릭 ->true
                            -취소버튼을 클릭 ->false

        .prompt("메세지","기본값")
                        --사용자가 값을 입력하도록 대기하는 창
                        --사용자가 글을 입력하고 확인 ->반환
        실행을 지연
                -지연시간 - 밀리초(1000 -1초)
            .setTimeout(function(){
            //실행될 부분
        },지연시간)
        5초 지연 실행
        .setTimeout(function()){

        },5000);

        실행 지연 취소
            -clearTimeout
                -취소를 하려면 setTimeout으로 설정된 함수 실행부분 주소를 알아야 한다.
                -변수에 대입을 해줘야 한다

        반복 실행
        1000 -> 1초 단위로 반복 실행, 2000 -2초 단위로 반복 실행
            .setlnterval(function()){
                // 반복 실행 영역
            }, 반복 실행 주기 -밀리초);

        -반복 실행 취소
            clearInteval
                -취소를 하려면 setInterval로 설정된 함수 실행 부분의 주소를 알아야 한다
                -변수에 대입을 해줘야 한다

        window객체
            -document(Document Object Model - DOM)
                -문서를 다루는 역할(HTML)
                -각종 태그

        DOMContentLoaded - DOM 트리 구축 완료 후 발생하는 이벤트
        Load - DOM 트리 구축 완료 후 각종 리소스(이미지,비디오,내부 iframe, 외부css,외부 js등 외부자원)가 로드가 완료 되면 발생하는 이벤트

        DOMContentLoaded 이벤트가 발생하기 전에는 DOM트리 구축이 안된 상태
        -> HTML 각 태그를 읽을 수 있는 상태X
        ->선택할 수 있는 대상이 없다

        script태그 속성 -defer ->스크립트 태그 안쪽 내용을 DOMContentLoaded 이벤트 발생 후에 실행 하겠다
                                <script defer src="dom_test.js"></script>
                        -async

        
        -HTML 요소를 선택하는 방법
        HTMLCollection,NodeList
        1)아이디 속성으로 선택하는 방법 - 1개만 선택
            document.getElementByid("아이디명");

        2)클래스 속성으로 선택하는 방법 -여러개 선택
            document.getElementByidClassName("클래스명");

        3)태그 이름으로 선택하는 방법 - 여러개 선택
            document.getElementsTagName("태그 이름");
        
        4)name 속성명으로 선택하는 방법
            document.getElementsByName("name 속성명");
        5)CSS 선택자 방식으로 선택하는 방법
            document.querySelector("CSS선택자");
                매칭된 가장 첫번째 요소 1개만 선택

            document.querySelectorAll("CSS선택자");
                매칭된 모든 요소가 선택

        아이디
        document.getElementByid

        클래스명
        document.getElementByidClassName

        태그명
        document.getElementsTagName

        name속성
        document.getElementsByName

        5.CSS선택자
        document.querySelector("css선택자") --1개
        document.querySelectorAll("css선택자)

        -선택한 요소(node)의 속성(attribute)
            .getAttribute("속성명") - 속성에 대한 값이 반환
            .setAttribute("속성명","값"); - 속성에 대한 값을 지정하거나 변경
            .removeAttribute("속성명") - 속성 제거

        많이 사용되는 일부 속성은 선택한 요소의 하위 속성으로 바로 접근이 가능(getAttribute 사용하지 않아도 된다)
        id속성
        class - className속성
        name - 접근가능
        style - css스타일을 적용하는 속성

         클래스 속성은 별도 관리 객체
         선택 요소.classList
                        .add -> 클래스 추가
                        .reomve ->클래스 제거
                        .toggle ->클래스가 없으면 추가,있으면 제거
                        .contains -> 클래스가 포함이 되어 있는지 체크

        속성명
            href,type,src ... --> 이미 기능적으로 구현되어 있는 속성
            만약 href 속성을 기능이 아니라 단순 사용자 정보 추가 사용
            -->기능에 영향을 준다

            사용자가 추가하는 추가 정보 속성명 규칙
            data-속성명
            price --> data-price='10000'
            src --> data-src=""

            data-속성명 형태 ->속성명으로 접근
            .dataset -> data-속성명을 쉽게 접근,변경,삭제
                        ->속성 접근 - 마침표 연산자(.), 대괄호 - 객체 접근방식
                        ->속성 추가 - 없는 속성에 값을 대입
                                    - 태그의 속성이 data-속성명으로 자동 추가
                        ->속성 변경 - 있는 속성에 값을 대입
                        ->속성 삭제 
                            delete 연산자
                            delete 속성명 -> data-속성명 ->제거

            결합자
            부모>자식
            형제+형제 -> 인접형제
            형제~형제

            Tracersing
            선택요소 -> 부모,자식,형제 이동해서 선택
            선택요소
                .children -> 선택한 요소의 자식 요소(바로아래요소)
                .parentElement -> 선택한 요소의 부모 요소(바로위)
                .firstElementChild -> 선택한 요소의 자식중 첫번째
                .lastElementChild -> 선택한 요소의 자식중 마지막

                .nextElementSiblings -> 같은 부모를 가진 다음 요소
                .previousElementSiblings -> 같은 부모를 가진 앞 요소 